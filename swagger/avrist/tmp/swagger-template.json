{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "APIs of Mobile BFF (Backends for Frontends)",
    "termsOfService": "http://li.ebaocloud.com.cn/bff2/",
    "contact": {
      "name": "eBaoTech"
    }
  },
  "host": "localhost:8080",
  "basePath": "/bff2",
  "tags": [
    {
      "name": "Package"
    },
    {
      "name": "Policy"
    },
    {
      "name": "Claim"
    },
    {
      "name": "Plan"
    },
    {
      "name": "Tools"
    },
    {
      "name": "Proposal"
    },
    {
      "name": "Product"
    },
    {
      "name": "User"
    },
    {
      "name": "Prospect"
    },
    {
      "name": "Customer service"
    }
  ],
  "paths": {
    "/ebaocloud-li/alteration/{tenantCode}/changeContactInfo": {
      "post": {
        "tags": [
          "Customer service"
        ],
        "summary": "paths['/ebaocloud-li/alteration/{tenantCode}/changeContactInfo'].post.summary",
        "operationId": "changeContactInfoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tenantCode",
            "in": "path",
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/changeContactInfo'].post.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/changeContactInfo'].post.parameters['1'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangingContactInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/changeContactInfo'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ChangingContactInfoResponse"
            }
          },
          "201": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/changeContactInfo'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/changeContactInfo'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/changeContactInfo'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/changeContactInfo'].post.responses['404'].description"
          }
        }
      }
    },
    "/ebaocloud-li/alteration/{tenantCode}/freelook": {
      "post": {
        "tags": [
          "Customer service"
        ],
        "summary": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook'].post.summary",
        "operationId": "freelookUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tenantCode",
            "in": "path",
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook'].post.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook'].post.parameters['1'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FreelookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/FreelookResponse"
            }
          },
          "201": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook'].post.responses['404'].description"
          }
        }
      }
    },
    "/ebaocloud-li/alteration/{tenantCode}/freelook/quotations": {
      "post": {
        "tags": [
          "Customer service"
        ],
        "summary": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook/quotations'].post.summary",
        "operationId": "freelookQuoteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tenantCode",
            "in": "path",
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook/quotations'].post.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook/quotations'].post.parameters['1'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FreelookQuotationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook/quotations'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/FreelookQuotationResponse"
            }
          },
          "201": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook/quotations'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook/quotations'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook/quotations'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/ebaocloud-li/alteration/{tenantCode}/freelook/quotations'].post.responses['404'].description"
          }
        }
      }
    },
    "/ebaocloud-li/proposal/accept": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/ebaocloud-li/proposal/accept'].post.summary",
        "description": "paths['/ebaocloud-li/proposal/accept'].post.description",
        "operationId": "acceptUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "proposalRequest",
            "description": "paths['/ebaocloud-li/proposal/accept'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesProposalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/ebaocloud-li/proposal/accept'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ProposalResponse"
            }
          },
          "201": {
            "description": "paths['/ebaocloud-li/proposal/accept'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/ebaocloud-li/proposal/accept'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/ebaocloud-li/proposal/accept'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/ebaocloud-li/proposal/accept'].post.responses['404'].description"
          }
        }
      }
    },
    "/ebaocloud-li/proposal/epolicy/{tenantCode}/{proposalCode}": {
      "get": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/ebaocloud-li/proposal/epolicy/{tenantCode}/{proposalCode}'].get.summary",
        "description": "paths['/ebaocloud-li/proposal/epolicy/{tenantCode}/{proposalCode}'].get.description",
        "operationId": "getEPolicyDownloadUrlUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "proposalCode",
            "in": "path",
            "description": "paths['/ebaocloud-li/proposal/epolicy/{tenantCode}/{proposalCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenantCode",
            "in": "path",
            "description": "paths['/ebaocloud-li/proposal/epolicy/{tenantCode}/{proposalCode}'].get.parameters['1'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/ebaocloud-li/proposal/epolicy/{tenantCode}/{proposalCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ProposalResponse"
            }
          },
          "401": {
            "description": "paths['/ebaocloud-li/proposal/epolicy/{tenantCode}/{proposalCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/ebaocloud-li/proposal/epolicy/{tenantCode}/{proposalCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/ebaocloud-li/proposal/epolicy/{tenantCode}/{proposalCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/ebaocloud-li/proposal/issue": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/ebaocloud-li/proposal/issue'].post.summary",
        "description": "paths['/ebaocloud-li/proposal/issue'].post.description",
        "operationId": "issueUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "proposalRequest",
            "description": "paths['/ebaocloud-li/proposal/issue'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesProposalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/ebaocloud-li/proposal/issue'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ProposalResponse"
            }
          },
          "201": {
            "description": "paths['/ebaocloud-li/proposal/issue'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/ebaocloud-li/proposal/issue'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/ebaocloud-li/proposal/issue'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/ebaocloud-li/proposal/issue'].post.responses['404'].description"
          }
        }
      }
    },
    "/ebaocloud-li/proposal/underwrite": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/ebaocloud-li/proposal/underwrite'].post.summary",
        "description": "paths['/ebaocloud-li/proposal/underwrite'].post.description",
        "operationId": "underwriteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "proposalRequest",
            "description": "paths['/ebaocloud-li/proposal/underwrite'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesProposalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/ebaocloud-li/proposal/underwrite'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ProposalResponse"
            }
          },
          "201": {
            "description": "paths['/ebaocloud-li/proposal/underwrite'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/ebaocloud-li/proposal/underwrite'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/ebaocloud-li/proposal/underwrite'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/ebaocloud-li/proposal/underwrite'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/package/advanceFilter/{tenantCode}": {
      "get": {
        "tags": [
          "Package"
        ],
        "summary": "paths['/sales/package/advanceFilter/{tenantCode}'].get.summary",
        "description": "paths['/sales/package/advanceFilter/{tenantCode}'].get.description",
        "operationId": "getAdvancedFiltersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tenantCode",
            "in": "path",
            "description": "paths['/sales/package/advanceFilter/{tenantCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/package/advanceFilter/{tenantCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesProductAdvancedFiltersResponse"
            }
          },
          "401": {
            "description": "paths['/sales/package/advanceFilter/{tenantCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/package/advanceFilter/{tenantCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/package/advanceFilter/{tenantCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/sales/package/findList": {
      "post": {
        "tags": [
          "Package"
        ],
        "summary": "paths['/sales/package/findList'].post.summary",
        "description": "paths['/sales/package/findList'].post.description",
        "operationId": "findSalesPackageListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesPackageListCretiriaRequest",
            "description": "paths['/sales/package/findList'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesPackageListCretiriaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/package/findList'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesPackageListResponse"
            }
          },
          "201": {
            "description": "paths['/sales/package/findList'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/package/findList'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/package/findList'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/package/findList'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/package/getDetail": {
      "post": {
        "tags": [
          "Package"
        ],
        "summary": "paths['/sales/package/getDetail'].post.summary",
        "description": "paths['/sales/package/getDetail'].post.description",
        "operationId": "findSalesPackageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesPackageCretiriaRequest",
            "description": "paths['/sales/package/getDetail'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesPackageCretiriaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/package/getDetail'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesPackageResponse"
            }
          },
          "201": {
            "description": "paths['/sales/package/getDetail'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/package/getDetail'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/package/getDetail'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/package/getDetail'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/pdf/exportProposalPdf": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/sales/pdf/exportProposalPdf'].post.summary",
        "description": "paths['/sales/pdf/exportProposalPdf'].post.description",
        "operationId": "getProposalPdfByRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "X-ebao-tenant-id",
            "in": "header",
            "description": "paths['/sales/pdf/exportProposalPdf'].post.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "proposalPdfRequest",
            "description": "paths['/sales/pdf/exportProposalPdf'].post.parameters['1'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProposalPdfRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/pdf/exportProposalPdf'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/PdfResponse"
            }
          },
          "201": {
            "description": "paths['/sales/pdf/exportProposalPdf'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/pdf/exportProposalPdf'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/pdf/exportProposalPdf'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/pdf/exportProposalPdf'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/pdf/exportQuotationPdf": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/sales/pdf/exportQuotationPdf'].post.summary",
        "description": "paths['/sales/pdf/exportQuotationPdf'].post.description",
        "operationId": "getQuotationPdfByRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "X-ebao-tenant-id",
            "in": "header",
            "description": "paths['/sales/pdf/exportQuotationPdf'].post.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "quotationPdfRequest",
            "description": "paths['/sales/pdf/exportQuotationPdf'].post.parameters['1'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotationPdfRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/pdf/exportQuotationPdf'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/PdfResponse"
            }
          },
          "201": {
            "description": "paths['/sales/pdf/exportQuotationPdf'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/pdf/exportQuotationPdf'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/pdf/exportQuotationPdf'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/pdf/exportQuotationPdf'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/pdf/getProposalPdf/{proposalCode}": {
      "get": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/sales/pdf/getProposalPdf/{proposalCode}'].get.summary",
        "description": "paths['/sales/pdf/getProposalPdf/{proposalCode}'].get.description",
        "operationId": "getProposalPdfByProposalCodeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "X-ebao-tenant-id",
            "in": "header",
            "description": "paths['/sales/pdf/getProposalPdf/{proposalCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalCode",
            "in": "path",
            "description": "paths['/sales/pdf/getProposalPdf/{proposalCode}'].get.parameters['1'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/pdf/getProposalPdf/{proposalCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/PdfResponse"
            }
          },
          "401": {
            "description": "paths['/sales/pdf/getProposalPdf/{proposalCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/pdf/getProposalPdf/{proposalCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/pdf/getProposalPdf/{proposalCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/sales/pdf/getQuotationPdf/{quotationCode}": {
      "get": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/sales/pdf/getQuotationPdf/{quotationCode}'].get.summary",
        "description": "paths['/sales/pdf/getQuotationPdf/{quotationCode}'].get.description",
        "operationId": "getQuotationPdfByQuotationCodeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "X-ebao-tenant-id",
            "in": "header",
            "description": "paths['/sales/pdf/getQuotationPdf/{quotationCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "name": "quotationCode",
            "in": "path",
            "description": "paths['/sales/pdf/getQuotationPdf/{quotationCode}'].get.parameters['1'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/pdf/getQuotationPdf/{quotationCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/PdfResponse"
            }
          },
          "401": {
            "description": "paths['/sales/pdf/getQuotationPdf/{quotationCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/pdf/getQuotationPdf/{quotationCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/pdf/getQuotationPdf/{quotationCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/sales/plan/delete": {
      "post": {
        "tags": [
          "Plan"
        ],
        "summary": "paths['/sales/plan/delete'].post.summary",
        "description": "paths['/sales/plan/delete'].post.description",
        "operationId": "deleteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesDeleteRequest",
            "description": "paths['/sales/plan/delete'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/plan/delete'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesPlanDeleteResponse"
            }
          },
          "201": {
            "description": "paths['/sales/plan/delete'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/plan/delete'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/plan/delete'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/plan/delete'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/plan/find": {
      "post": {
        "tags": [
          "Plan"
        ],
        "summary": "paths['/sales/plan/find'].post.summary",
        "description": "paths['/sales/plan/find'].post.description",
        "operationId": "findUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesProposalCretiriaRequest",
            "description": "paths['/sales/plan/find'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesCretiriaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/plan/find'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesPlanListResponse"
            }
          },
          "201": {
            "description": "paths['/sales/plan/find'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/plan/find'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/plan/find'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/plan/find'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/plan/get/{tenantCode}/{quotationCode}": {
      "get": {
        "tags": [
          "Plan"
        ],
        "summary": "paths['/sales/plan/get/{tenantCode}/{quotationCode}'].get.summary",
        "description": "paths['/sales/plan/get/{tenantCode}/{quotationCode}'].get.description",
        "operationId": "getUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tenantCode",
            "in": "path",
            "description": "paths['/sales/plan/get/{tenantCode}/{quotationCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "name": "quotationCode",
            "in": "path",
            "description": "paths['/sales/plan/get/{tenantCode}/{quotationCode}'].get.parameters['1'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/plan/get/{tenantCode}/{quotationCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesPlanGetResponse"
            }
          },
          "401": {
            "description": "paths['/sales/plan/get/{tenantCode}/{quotationCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/plan/get/{tenantCode}/{quotationCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/plan/get/{tenantCode}/{quotationCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/sales/plan/save": {
      "post": {
        "tags": [
          "Plan"
        ],
        "summary": "paths['/sales/plan/save'].post.summary",
        "description": "paths['/sales/plan/save'].post.description",
        "operationId": "saveUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesPlanRequest",
            "description": "paths['/sales/plan/save'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesPlanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/plan/save'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesSaveResponse"
            }
          },
          "201": {
            "description": "paths['/sales/plan/save'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/plan/save'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/plan/save'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/plan/save'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/policy/get/{tenantCode}/{policyCode}": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "paths['/sales/policy/get/{tenantCode}/{policyCode}'].get.summary",
        "description": "paths['/sales/policy/get/{tenantCode}/{policyCode}'].get.description",
        "operationId": "getPolicyByCodeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tenantCode",
            "in": "path",
            "description": "paths['/sales/policy/get/{tenantCode}/{policyCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyCode",
            "in": "path",
            "description": "paths['/sales/policy/get/{tenantCode}/{policyCode}'].get.parameters['1'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/policy/get/{tenantCode}/{policyCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/PolicyInfoResponse"
            }
          },
          "401": {
            "description": "paths['/sales/policy/get/{tenantCode}/{policyCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/policy/get/{tenantCode}/{policyCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/policy/get/{tenantCode}/{policyCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/sales/policy/getGroup/{tenantCode}/{groupPolicyCode}": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "paths['/sales/policy/getGroup/{tenantCode}/{groupPolicyCode}'].get.summary",
        "description": "paths['/sales/policy/getGroup/{tenantCode}/{groupPolicyCode}'].get.description",
        "operationId": "getGroupListUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tenantCode",
            "in": "path",
            "description": "paths['/sales/policy/getGroup/{tenantCode}/{groupPolicyCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupPolicyCode",
            "in": "path",
            "description": "paths['/sales/policy/getGroup/{tenantCode}/{groupPolicyCode}'].get.parameters['1'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/policy/getGroup/{tenantCode}/{groupPolicyCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/PolicyInfoListResponse"
            }
          },
          "401": {
            "description": "paths['/sales/policy/getGroup/{tenantCode}/{groupPolicyCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/policy/getGroup/{tenantCode}/{groupPolicyCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/policy/getGroup/{tenantCode}/{groupPolicyCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/sales/product/calcPremium": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "paths['/sales/product/calcPremium'].post.summary",
        "description": "paths['/sales/product/calcPremium'].post.description",
        "operationId": "calcPremiumUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesProductCalcRequest",
            "description": "paths['/sales/product/calcPremium'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesProductCalcRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/product/calcPremium'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/CalcPremiumResponse"
            }
          },
          "201": {
            "description": "paths['/sales/product/calcPremium'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/product/calcPremium'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/product/calcPremium'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/product/calcPremium'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/product/findAvailableRiders": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "paths['/sales/product/findAvailableRiders'].post.summary",
        "description": "paths['/sales/product/findAvailableRiders'].post.description",
        "operationId": "getAvailableRidersUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesAvailableRidersRequest",
            "description": "paths['/sales/product/findAvailableRiders'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesAvailableRidersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/product/findAvailableRiders'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesProductDetailDataResponse"
            }
          },
          "201": {
            "description": "paths['/sales/product/findAvailableRiders'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/product/findAvailableRiders'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/product/findAvailableRiders'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/product/findAvailableRiders'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/product/getBasic": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "paths['/sales/product/getBasic'].post.summary",
        "description": "paths['/sales/product/getBasic'].post.description",
        "operationId": "getBasicUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesProductBasicRequest",
            "description": "paths['/sales/product/getBasic'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesProductBasicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/product/getBasic'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesProductBasicResponse"
            }
          },
          "201": {
            "description": "paths['/sales/product/getBasic'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/product/getBasic'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/product/getBasic'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/product/getBasic'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/product/getRuleMetaData": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "paths['/sales/product/getRuleMetaData'].post.summary",
        "description": "paths['/sales/product/getRuleMetaData'].post.description",
        "operationId": "getRuleMetaDataUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ruleMetaDataRequest",
            "description": "paths['/sales/product/getRuleMetaData'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesProductBasicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/product/getRuleMetaData'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesProductDetailDataResponse"
            }
          },
          "201": {
            "description": "paths['/sales/product/getRuleMetaData'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/product/getRuleMetaData'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/product/getRuleMetaData'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/product/getRuleMetaData'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/product/illustrationCalc": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "paths['/sales/product/illustrationCalc'].post.summary",
        "description": "paths['/sales/product/illustrationCalc'].post.description",
        "operationId": "illustrationCalcUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesProductCalcRequest",
            "description": "paths['/sales/product/illustrationCalc'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesProductCalcRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/product/illustrationCalc'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/IllustrationCalcResponse"
            }
          },
          "201": {
            "description": "paths['/sales/product/illustrationCalc'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/product/illustrationCalc'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/product/illustrationCalc'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/product/illustrationCalc'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/product/products/{productCode}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "paths['/sales/product/products/{productCode}'].get.summary",
        "description": "paths['/sales/product/products/{productCode}'].get.description",
        "operationId": "getProductDetailUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "paths['/sales/product/products/{productCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-ebao-tenant-id",
            "in": "header",
            "description": "paths['/sales/product/products/{productCode}'].get.parameters['1'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/product/products/{productCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ProductResponse"
            }
          },
          "401": {
            "description": "paths['/sales/product/products/{productCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/product/products/{productCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/product/products/{productCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/sales/product/salesCategory/{productCode}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "paths['/sales/product/salesCategory/{productCode}'].get.summary",
        "description": "paths['/sales/product/salesCategory/{productCode}'].get.description",
        "operationId": "getSalesCategoryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "paths['/sales/product/salesCategory/{productCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-ebao-tenant-id",
            "in": "header",
            "description": "paths['/sales/product/salesCategory/{productCode}'].get.parameters['1'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/product/salesCategory/{productCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesProductSalesCategoryResponse"
            }
          },
          "401": {
            "description": "paths['/sales/product/salesCategory/{productCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/product/salesCategory/{productCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/product/salesCategory/{productCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/sales/proposal/find": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/sales/proposal/find'].post.summary",
        "description": "paths['/sales/proposal/find'].post.description",
        "operationId": "findUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesProposalCretiriaRequest",
            "description": "paths['/sales/proposal/find'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesCretiriaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/proposal/find'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesProposalListResponse"
            }
          },
          "201": {
            "description": "paths['/sales/proposal/find'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/proposal/find'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/proposal/find'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/proposal/find'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/proposal/get/{tenantCode}/{proposalCode}": {
      "get": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/sales/proposal/get/{tenantCode}/{proposalCode}'].get.summary",
        "description": "paths['/sales/proposal/get/{tenantCode}/{proposalCode}'].get.description",
        "operationId": "getUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tenantCode",
            "in": "path",
            "description": "paths['/sales/proposal/get/{tenantCode}/{proposalCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalCode",
            "in": "path",
            "description": "paths['/sales/proposal/get/{tenantCode}/{proposalCode}'].get.parameters['1'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/proposal/get/{tenantCode}/{proposalCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesProposalGetResponse"
            }
          },
          "401": {
            "description": "paths['/sales/proposal/get/{tenantCode}/{proposalCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/proposal/get/{tenantCode}/{proposalCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/proposal/get/{tenantCode}/{proposalCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/sales/proposal/save": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/sales/proposal/save'].post.summary",
        "description": "paths['/sales/proposal/save'].post.description",
        "operationId": "saveUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesProposalRequest",
            "description": "paths['/sales/proposal/save'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesProposalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/proposal/save'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesSaveResponse"
            }
          },
          "201": {
            "description": "paths['/sales/proposal/save'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/proposal/save'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/proposal/save'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/proposal/save'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/prospect/find": {
      "post": {
        "tags": [
          "Prospect"
        ],
        "summary": "paths['/sales/prospect/find'].post.summary",
        "description": "paths['/sales/prospect/find'].post.description",
        "operationId": "findUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesCretiriaRequest",
            "description": "paths['/sales/prospect/find'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesCretiriaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/prospect/find'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesProspectListResponse"
            }
          },
          "201": {
            "description": "paths['/sales/prospect/find'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/prospect/find'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/prospect/find'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/prospect/find'].post.responses['404'].description"
          }
        }
      }
    },
    "/sales/user/getProducer": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "paths['/sales/user/getProducer'].post.summary",
        "description": "paths['/sales/user/getProducer'].post.description",
        "operationId": "getProducerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salesUserRequest",
            "description": "paths['/sales/user/getProducer'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/sales/user/getProducer'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/SalesUserResponse"
            }
          },
          "201": {
            "description": "paths['/sales/user/getProducer'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/sales/user/getProducer'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/sales/user/getProducer'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/sales/user/getProducer'].post.responses['404'].description"
          }
        }
      }
    },
    "/tools/checkSign": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "paths['/tools/checkSign'].post.summary",
        "description": "paths['/tools/checkSign'].post.description",
        "operationId": "checkSignUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "paths['/tools/checkSign'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToolsSignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/tools/checkSign'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ToolsSignResponse"
            }
          },
          "201": {
            "description": "paths['/tools/checkSign'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/tools/checkSign'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/tools/checkSign'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/tools/checkSign'].post.responses['404'].description"
          }
        }
      }
    },
    "/tools/getShortUrl": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "paths['/tools/getShortUrl'].post.summary",
        "description": "paths['/tools/getShortUrl'].post.description",
        "operationId": "getShortUrlUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "paths['/tools/getShortUrl'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShortUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/tools/getShortUrl'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ShortUrlResponse"
            }
          },
          "201": {
            "description": "paths['/tools/getShortUrl'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/tools/getShortUrl'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/tools/getShortUrl'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/tools/getShortUrl'].post.responses['404'].description"
          }
        }
      }
    },
    "/tools/sign": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "paths['/tools/sign'].post.summary",
        "description": "paths['/tools/sign'].post.description",
        "operationId": "signUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "paths['/tools/sign'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToolsSignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/tools/sign'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ToolsSignResponse"
            }
          },
          "201": {
            "description": "paths['/tools/sign'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/tools/sign'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/tools/sign'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/tools/sign'].post.responses['404'].description"
          }
        }
      }
    },
    "/v4/alterations/inforce": {
      "post": {
        "tags": [
          "Customer service"
        ],
        "summary": "paths['/v4/alterations/inforce'].post.summary",
        "description": "paths['/v4/alterations/inforce'].post.description",
        "operationId": "inforceUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyAlterationInput",
            "description": "paths['/v4/alterations/inforce'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/v4/alterations/inforce'].post.responses['200'].description",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "paths['/v4/alterations/inforce'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/v4/alterations/inforce'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/v4/alterations/inforce'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/v4/alterations/inforce'].post.responses['404'].description"
          }
        }
      }
    },
    "/v4/claim/report": {
      "post": {
        "tags": [
          "Claim"
        ],
        "summary": "paths['/v4/claim/report'].post.summary",
        "description": "paths['/v4/claim/report'].post.description",
        "operationId": "reportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "paths['/v4/claim/report'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/v4/claim/report'].post.responses['200'].description",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "paths['/v4/claim/report'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/v4/claim/report'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/v4/claim/report'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/v4/claim/report'].post.responses['404'].description"
          }
        }
      }
    },
    "/v4/pd/calcPrem": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "paths['/v4/pd/calcPrem'].post.summary",
        "description": "paths['/v4/pd/calcPrem'].post.description",
        "operationId": "quoteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "proposalRequest",
            "description": "paths['/v4/pd/calcPrem'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesProductCalcRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/v4/pd/calcPrem'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/CalcPremiumResponse"
            }
          },
          "201": {
            "description": "paths['/v4/pd/calcPrem'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/v4/pd/calcPrem'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/v4/pd/calcPrem'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/v4/pd/calcPrem'].post.responses['404'].description"
          }
        }
      }
    },
    "/v4/proposal/accept": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/v4/proposal/accept'].post.summary",
        "description": "paths['/v4/proposal/accept'].post.description",
        "operationId": "acceptUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "proposalRequest",
            "description": "paths['/v4/proposal/accept'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesProposalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/v4/proposal/accept'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ProposalResponse"
            }
          },
          "201": {
            "description": "paths['/v4/proposal/accept'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/v4/proposal/accept'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/v4/proposal/accept'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/v4/proposal/accept'].post.responses['404'].description"
          }
        }
      }
    },
    "/v4/proposal/get/{policyCode}": {
      "get": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/v4/proposal/get/{policyCode}'].get.summary",
        "description": "paths['/v4/proposal/get/{policyCode}'].get.description",
        "operationId": "getPolicyByCodeUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "policyCode",
            "in": "path",
            "description": "paths['/v4/proposal/get/{policyCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/v4/proposal/get/{policyCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ProposalResponse"
            }
          },
          "401": {
            "description": "paths['/v4/proposal/get/{policyCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/v4/proposal/get/{policyCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/v4/proposal/get/{policyCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/v4/proposal/getGroup/{groupPolicyCode}": {
      "get": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/v4/proposal/getGroup/{groupPolicyCode}'].get.summary",
        "description": "paths['/v4/proposal/getGroup/{groupPolicyCode}'].get.description",
        "operationId": "getGroupListUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "groupPolicyCode",
            "in": "path",
            "description": "paths['/v4/proposal/getGroup/{groupPolicyCode}'].get.parameters['0'].description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/v4/proposal/getGroup/{groupPolicyCode}'].get.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ProposalListInfoResponse"
            }
          },
          "401": {
            "description": "paths['/v4/proposal/getGroup/{groupPolicyCode}'].get.responses['401'].description"
          },
          "403": {
            "description": "paths['/v4/proposal/getGroup/{groupPolicyCode}'].get.responses['403'].description"
          },
          "404": {
            "description": "paths['/v4/proposal/getGroup/{groupPolicyCode}'].get.responses['404'].description"
          }
        }
      }
    },
    "/v4/proposal/issue": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "summary": "paths['/v4/proposal/issue'].post.summary",
        "description": "paths['/v4/proposal/issue'].post.description",
        "operationId": "issueUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "proposalRequest",
            "description": "paths['/v4/proposal/issue'].post.parameters['0'].description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesProposalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paths['/v4/proposal/issue'].post.responses['200'].description",
            "schema": {
              "$ref": "#/definitions/ProposalResponse"
            }
          },
          "201": {
            "description": "paths['/v4/proposal/issue'].post.responses['201'].description"
          },
          "401": {
            "description": "paths['/v4/proposal/issue'].post.responses['401'].description"
          },
          "403": {
            "description": "paths['/v4/proposal/issue'].post.responses['403'].description"
          },
          "404": {
            "description": "paths['/v4/proposal/issue'].post.responses['404'].description"
          }
        }
      }
    }
  },
  "definitions": {
    "Serializable": {
      "type": "object"
    },
    "ToolsSignRequest": {
      "type": "object",
      "properties": {
        "charSet": {
          "type": "string"
        },
        "insuredCompanyCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "salesChannelCode": {
          "type": "string"
        },
        "sign": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "addressExt1": {
          "type": "string"
        },
        "addressExt2": {
          "type": "string"
        },
        "addressId": {
          "type": "integer",
          "format": "int64"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "postCode": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "SalesProductDetailInfo": {
      "type": "object",
      "properties": {
        "ageLimitList": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.ageLimitList.description",
          "items": {
            "$ref": "#/definitions/AgeLimit"
          }
        },
        "ageRange": {
          "description": "definitions.SalesProductDetailInfo.properties.ageRange.description",
          "$ref": "#/definitions/AgeRangeVO"
        },
        "ally": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.ally.description"
        },
        "amountLimitList": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.amountLimitList.description",
          "items": {
            "$ref": "#/definitions/AmountLimit"
          }
        },
        "attachCompulsory": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.attachCompulsory.description"
        },
        "attachedPrdtLimitCondition": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.attachedPrdtLimitCondition.description",
          "items": {
            "$ref": "#/definitions/AttachedProductLimit"
          }
        },
        "benefitLevelList": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.benefitLevelList.description",
          "items": {
            "$ref": "#/definitions/ProductBenefitLevel"
          }
        },
        "benefitType": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.benefitType.description"
        },
        "coexistPrdtList": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.coexistPrdtList.description",
          "items": {
            "$ref": "#/definitions/ProductRelationVO"
          }
        },
        "dependPrdtList": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.dependPrdtList.description",
          "items": {
            "$ref": "#/definitions/ProductRelationVO"
          }
        },
        "familyType": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.familyType.description"
        },
        "funds": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.funds.description",
          "items": {
            "$ref": "#/definitions/Fund"
          }
        },
        "incrementIndex": {
          "type": "number",
          "format": "double",
          "description": "definitions.SalesProductDetailInfo.properties.incrementIndex.description"
        },
        "insType": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.insType.description"
        },
        "insurerCode": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.insurerCode.description"
        },
        "isAnnuityProduct": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.isAnnuityProduct.description"
        },
        "isIlpProduct": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.isIlpProduct.description"
        },
        "isPackageProduct": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.isPackageProduct.description"
        },
        "isSalesLevelProduct": {
          "type": "boolean"
        },
        "isUDRider": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.isUDRider.description"
        },
        "isWaiver": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.isWaiver.description"
        },
        "jobCateList": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.jobCateList.description",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "jobIndi": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.jobIndi.description"
        },
        "moneyId": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.SalesProductDetailInfo.properties.moneyId.description"
        },
        "partialWithdrawPermit": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.partialWithdrawPermit.description"
        },
        "partialWithdrawStartYear": {
          "type": "integer",
          "format": "int32"
        },
        "paymentFreqs": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.paymentFreqs.description",
          "items": {
            "type": "string"
          }
        },
        "pointToPH": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.pointToPH.description"
        },
        "pointToSecInsured": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.pointToSecInsured.description"
        },
        "premLimitList": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.premLimitList.description",
          "items": {
            "$ref": "#/definitions/PremLimit"
          }
        },
        "productLiabilityList": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.productLiabilityList.description",
          "items": {
            "$ref": "#/definitions/Liability"
          }
        },
        "regPartWitdrStartYear": {
          "type": "integer",
          "format": "int32"
        },
        "regPartWithdrMaxAmount": {
          "type": "number",
          "format": "double"
        },
        "regPartWithdrMinAmount": {
          "type": "number",
          "format": "double"
        },
        "regularTopupPermit": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.regularTopupPermit.description"
        },
        "saEqual": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.saEqual.description"
        },
        "saPremTip": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.saPremTip.description"
        },
        "salesProductCode": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.salesProductCode.description"
        },
        "salesProductId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.SalesProductDetailInfo.properties.salesProductId.description"
        },
        "salesProductName": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.salesProductName.description"
        },
        "singleTopupPermit": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.singleTopupPermit.description"
        },
        "smokingIndi": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.smokingIndi.description"
        },
        "socialInsureIndi": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.socialInsureIndi.description"
        },
        "targetAthRateList": {
          "type": "array",
          "description": "definitions.SalesProductDetailInfo.properties.targetAthRateList.description",
          "items": {
            "$ref": "#/definitions/TargetAttachRateVO"
          }
        },
        "topupStartYear": {
          "type": "integer",
          "format": "int32"
        },
        "unitFlag": {
          "type": "string",
          "description": "definitions.SalesProductDetailInfo.properties.unitFlag.description"
        },
        "waiverChargeYearAdjustment": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.SalesProductDetailInfo.properties.waiverChargeYearAdjustment.description"
        }
      }
    },
    "AddressInput": {
      "type": "object",
      "properties": {
        "address1": {
          "type": "string",
          "example": "上海市",
          "description": "definitions.AddressInput.properties.address1.description"
        },
        "address2": {
          "type": "string",
          "example": "上海市",
          "description": "definitions.AddressInput.properties.address2.description"
        },
        "address3": {
          "type": "string",
          "example": "杨浦区",
          "description": "definitions.AddressInput.properties.address3.description"
        },
        "address4": {
          "type": "string",
          "example": "淞沪路270号创智天地3号楼3楼",
          "description": "definitions.AddressInput.properties.address4.description"
        },
        "postCode": {
          "type": "string",
          "example": "200433",
          "description": "definitions.AddressInput.properties.postCode.description"
        }
      }
    },
    "ToolsSignResponse": {
      "type": "object",
      "properties": {
        "decodeMsg": {
          "type": "string"
        },
        "encodeMsg": {
          "type": "string"
        },
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "AmountLimit": {
      "type": "object",
      "properties": {
        "jobClass": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AmountLimit.properties.jobClass.description"
        },
        "maxAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AmountLimit.properties.maxAge.description"
        },
        "maxAmount": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.AmountLimit.properties.maxAmount.description"
        },
        "minAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AmountLimit.properties.minAge.description"
        },
        "minAmount": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.AmountLimit.properties.minAmount.description"
        },
        "moneyId": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AmountLimit.properties.moneyId.description"
        }
      }
    },
    "Rights": {
      "type": "object",
      "properties": {
        "rightDesc": {
          "type": "string"
        },
        "rightId": {
          "type": "integer",
          "format": "int64"
        },
        "rightName": {
          "type": "string"
        }
      }
    },
    "SalesProductSalesCategory": {
      "type": "object",
      "properties": {
        "extendedProps": {
          "type": "object"
        },
        "categoryName": {
          "type": "string",
          "description": "definitions.SalesProductSalesCategory.properties.categoryName.description"
        },
        "description": {
          "type": "string",
          "description": "definitions.SalesProductSalesCategory.properties.description.description"
        },
        "categoryCode": {
          "type": "string",
          "description": "definitions.SalesProductSalesCategory.properties.categoryCode.description"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.SalesProductSalesCategory.properties.displayOrder.description"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.SalesProductSalesCategory.properties.categoryId.description"
        },
        "parentCateId": {
          "type": "string",
          "description": "definitions.SalesProductSalesCategory.properties.parentCateId.description"
        }
      }
    },
    "SalesSaveResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proposalCode": {
          "type": "string"
        },
        "quotationCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "PolicyInfoListResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policyInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProposalInfo"
          }
        },
        "status": {
          "type": "string"
        },
        "totalSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SalesProposalGetResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proposal": {
          "$ref": "#/definitions/ProposalInfo"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "GenericVO": {
      "type": "object",
      "properties": {
        "extObject": {
          "$ref": "#/definitions/GenericVO"
        }
      }
    },
    "Agent": {
      "type": "object",
      "properties": {
        "agentCode": {
          "type": "string"
        },
        "salesAreaCode": {
          "type": "string"
        }
      }
    },
    "SalesPackageListCretiriaRequest": {
      "type": "object",
      "properties": {
        "insurerCodes": {
          "type": "string"
        },
        "keyWords": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "salesCategories": {
          "type": "string"
        },
        "salesRights": {
          "type": "string"
        },
        "sign": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "CollectionInput": {
      "type": "object",
      "properties": {
        "arapCollectionTime": {
          "type": "string",
          "format": "date-time"
        },
        "arapIndicator": {
          "type": "string"
        },
        "bankAccount": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "collectionDate": {
          "type": "string",
          "format": "date-time"
        },
        "collectionNo": {
          "type": "string"
        },
        "collectionTime": {
          "type": "string",
          "format": "date-time"
        },
        "currency": {
          "type": "integer",
          "format": "int32"
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "feeAmount": {
          "type": "number",
          "format": "double"
        },
        "paymentMethod": {
          "type": "integer",
          "format": "int32"
        },
        "paymentPlatform": {
          "type": "integer",
          "format": "int64"
        },
        "policyNumber": {
          "type": "string"
        },
        "proposalNumber": {
          "type": "string"
        },
        "thirdPtyPayNo": {
          "type": "string"
        }
      }
    },
    "ProposalListInfoResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proposalInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProposalInfo"
          }
        },
        "status": {
          "type": "string"
        },
        "totalSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SalesProposalRequest": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        },
        "proposal": {
          "$ref": "#/definitions/ProposalInfo"
        },
        "sign": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "SalesInsurer": {
      "type": "object",
      "properties": {
        "insurerCode": {
          "type": "string"
        },
        "insurerName": {
          "type": "string"
        }
      }
    },
    "QuotationPdfRequest": {
      "type": "object",
      "properties": {
        "ableRiders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbleRider"
          }
        },
        "agentSignUrl": {
          "type": "string"
        },
        "illustration": {
          "$ref": "#/definitions/IllustrationCalc"
        },
        "investFunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvestFund"
          }
        },
        "plan": {
          "$ref": "#/definitions/ProposalInfo"
        },
        "proposerSignUrl": {
          "type": "string"
        }
      }
    },
    "Bonus": {
      "type": "object",
      "properties": {
        "cashBonus": {
          "type": "boolean",
          "example": false,
          "description": "definitions.Bonus.properties.cashBonus.description"
        },
        "cashBonusOptions": {
          "type": "array",
          "description": "definitions.Bonus.properties.cashBonusOptions.description",
          "items": {
            "type": "string"
          }
        },
        "cashBonusUnitAmount": {
          "type": "number",
          "format": "double",
          "description": "definitions.Bonus.properties.cashBonusUnitAmount.description"
        },
        "cashBonusVestYear": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.Bonus.properties.cashBonusVestYear.description"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.Bonus.properties.extendedProps.description"
        }
      }
    },
    "InvestRate": {
      "type": "object",
      "properties": {
        "allocationFlag": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "assignRate": {
          "type": "number",
          "format": "double"
        },
        "fundCode": {
          "type": "string"
        },
        "highPlyYear": {
          "type": "integer",
          "format": "int64"
        },
        "listId": {
          "type": "integer",
          "format": "int64"
        },
        "lowPlyYear": {
          "type": "integer",
          "format": "int64"
        },
        "premType": {
          "type": "string"
        }
      }
    },
    "ProposalInfo": {
      "type": "object",
      "properties": {
        "advice": {
          "type": "string"
        },
        "annualPrem": {
          "type": "number",
          "format": "double"
        },
        "applyCode": {
          "type": "string"
        },
        "beneficiaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Beneficiary"
          }
        },
        "collectionInput": {
          "$ref": "#/definitions/CollectionInput"
        },
        "ePolicyDownloadUrl": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "inforceDate": {
          "type": "string",
          "format": "date-time"
        },
        "insureds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insured"
          }
        },
        "langCode": {
          "type": "string"
        },
        "mainCoverages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coverage"
          }
        },
        "mainProductName": {
          "type": "string"
        },
        "miscFee": {
          "type": "number",
          "format": "double"
        },
        "moneyId": {
          "type": "integer",
          "format": "int32"
        },
        "organProposer": {
          "$ref": "#/definitions/OrganProposer"
        },
        "outboundTenantCode": {
          "type": "string"
        },
        "packageCode": {
          "type": "string"
        },
        "packageId": {
          "type": "integer",
          "format": "int64"
        },
        "packageName": {
          "type": "string"
        },
        "payerAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayerAccountInput"
          }
        },
        "policyCode": {
          "type": "string"
        },
        "policyId": {
          "type": "integer",
          "format": "int64"
        },
        "producer": {
          "$ref": "#/definitions/Producer"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "proposalCode": {
          "type": "string"
        },
        "proposalId": {
          "type": "integer",
          "format": "int64"
        },
        "proposalStatus": {
          "type": "string"
        },
        "proposer": {
          "$ref": "#/definitions/Proposer"
        },
        "quotationCode": {
          "type": "string"
        },
        "quotationId": {
          "type": "integer",
          "format": "int64"
        },
        "riderCoverages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coverage"
          }
        },
        "riskStatus": {
          "type": "string"
        },
        "salesChannelCode": {
          "type": "string"
        },
        "salesCompanyCode": {
          "type": "string"
        },
        "serviceAgentCode": {
          "type": "string"
        },
        "showAdvice": {
          "type": "string"
        },
        "submitDate": {
          "type": "string",
          "format": "date-time"
        },
        "totalFirstYearPrem": {
          "type": "number",
          "format": "double"
        },
        "underwritingDesc": {
          "type": "string"
        }
      }
    },
    "Insured": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "certiBeginDate": {
          "type": "string",
          "format": "date-time"
        },
        "certiCode": {
          "type": "string"
        },
        "certiEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "certiType": {
          "type": "integer",
          "format": "int32"
        },
        "declaration": {
          "$ref": "#/definitions/CustomerDeclarationInput"
        },
        "email": {
          "type": "string"
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "firstName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string"
        },
        "income": {
          "type": "integer",
          "format": "int64"
        },
        "jobCateCode": {
          "type": "string"
        },
        "jobCateId": {
          "type": "integer",
          "format": "int64"
        },
        "laPhRela": {
          "type": "integer",
          "format": "int32"
        },
        "lastName": {
          "type": "string"
        },
        "marriageStatus": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "relationToMainInsured": {
          "type": "integer",
          "format": "int32"
        },
        "smoking": {
          "type": "string"
        },
        "socialInsuranceIndi": {
          "type": "string"
        },
        "weight": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ChangingContactInfoItemInput": {
      "type": "object",
      "required": [
        "effectiveDate",
        "itemDetail",
        "orderId",
        "policyNumber",
        "serviceId"
      ],
      "properties": {
        "policyNumber": {
          "type": "string",
          "example": "0000017623",
          "description": "definitions.ChangingContactInfoItemInput.properties.policyNumber.description"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32",
          "example": 201,
          "description": "definitions.ChangingContactInfoItemInput.properties.serviceId.description",
          "enum": [
            201,
            104
          ]
        },
        "submissionDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.ChangingContactInfoItemInput.properties.submissionDate.description"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.ChangingContactInfoItemInput.properties.effectiveDate.description"
        },
        "orderId": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ChangingContactInfoItemInput.properties.orderId.description"
        },
        "itemDetail": {
          "description": "definitions.ChangingContactInfoItemInput.properties.itemDetail.description",
          "$ref": "#/definitions/ChangingContactInfoInputDetail"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.ChangingContactInfoItemInput.properties.extendedProps.description",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CalcPremiumResponse": {
      "type": "object",
      "properties": {
        "annualPrem": {
          "type": "number",
          "format": "double"
        },
        "coveragePrems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoveragePremium"
          }
        },
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "totalFirstYearPrem": {
          "type": "number",
          "format": "double"
        },
        "valueAddedList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueAdded"
          }
        }
      }
    },
    "SalesProductSalesCategoryResponse": {
      "type": "object",
      "properties": {
        "clientRequestId": {
          "type": "string"
        },
        "clientRequestTime": {
          "type": "string",
          "format": "date-time"
        },
        "exceptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.SalesProductSalesCategoryResponse.properties.extendedProps.description"
        },
        "listSalesCategory": {
          "type": "array",
          "description": "definitions.SalesProductSalesCategoryResponse.properties.listSalesCategory.description",
          "items": {
            "$ref": "#/definitions/SalesProductSalesCategory"
          }
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericValidationResult"
          }
        },
        "result": {
          "type": "string",
          "enum": [
            "1",
            "0",
            "-1"
          ]
        }
      }
    },
    "Proposer": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "certiBeginDate": {
          "type": "string",
          "format": "date-time"
        },
        "certiCode": {
          "type": "string"
        },
        "certiEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "certiType": {
          "type": "integer",
          "format": "int32"
        },
        "declaration": {
          "$ref": "#/definitions/CustomerDeclarationInput"
        },
        "email": {
          "type": "string"
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "firstName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string"
        },
        "income": {
          "type": "integer",
          "format": "int64"
        },
        "jobCateCode": {
          "type": "string"
        },
        "jobCateId": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string"
        },
        "marriageStatus": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "smoking": {
          "type": "string"
        },
        "socialInsuranceIndi": {
          "type": "string"
        },
        "weight": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "SalesHotKeywords": {
      "type": "object",
      "properties": {
        "defaultIndi": {
          "type": "string"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int64"
        },
        "keyWords": {
          "type": "string"
        }
      }
    },
    "ProductResponse": {
      "type": "object",
      "properties": {
        "clientRequestId": {
          "type": "string"
        },
        "clientRequestTime": {
          "type": "string",
          "format": "date-time"
        },
        "exceptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.ProductResponse.properties.extendedProps.description"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericValidationResult"
          }
        },
        "productInfo": {
          "description": "definitions.ProductResponse.properties.productInfo.description",
          "$ref": "#/definitions/ProductInfo"
        },
        "result": {
          "type": "string",
          "enum": [
            "1",
            "0",
            "-1"
          ]
        }
      }
    },
    "PackageRights": {
      "type": "object",
      "properties": {
        "displayOrder": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.PackageRights.properties.displayOrder.description"
        },
        "ifFilter": {
          "type": "string",
          "description": "definitions.PackageRights.properties.ifFilter.description"
        },
        "packageCode": {
          "type": "string",
          "description": "definitions.PackageRights.properties.packageCode.description"
        },
        "rightDesc": {
          "type": "string",
          "description": "definitions.PackageRights.properties.rightDesc.description"
        },
        "rightWords": {
          "type": "string",
          "description": "definitions.PackageRights.properties.rightWords.description"
        }
      }
    },
    "PartyContact": {
      "type": "object",
      "properties": {
        "homeTel": {
          "type": "string",
          "example": "87654321",
          "description": "definitions.PartyContact.properties.homeTel.description"
        },
        "mobileTel": {
          "type": "string",
          "example": "15012345678",
          "description": "definitions.PartyContact.properties.mobileTel.description"
        },
        "officeTel": {
          "type": "string",
          "example": "88888888",
          "description": "definitions.PartyContact.properties.officeTel.description"
        },
        "officeTelExt": {
          "type": "string",
          "example": "1234",
          "description": "definitions.PartyContact.properties.officeTelExt.description"
        },
        "email": {
          "type": "string",
          "example": "TestPerson14@126.com",
          "description": "definitions.PartyContact.properties.email.description"
        },
        "contact": {
          "type": "string",
          "example": "张三",
          "description": "definitions.PartyContact.properties.contact.description"
        },
        "contactTel": {
          "type": "string",
          "example": "88888888",
          "description": "definitions.PartyContact.properties.contactTel.description"
        },
        "fax": {
          "type": "string",
          "example": "88888887",
          "description": "definitions.PartyContact.properties.fax.description"
        }
      }
    },
    "SalesUserResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "producer": {
          "$ref": "#/definitions/Producer"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "FreelookInputDetail": {
      "type": "object",
      "required": [
        "alteredCoverages",
        "freelookReason"
      ],
      "properties": {
        "freelookReason": {
          "type": "integer",
          "format": "int32",
          "example": 54,
          "description": "definitions.FreelookInputDetail.properties.freelookReason.description",
          "enum": [
            51,
            52,
            53,
            54,
            55
          ]
        },
        "alteredCoverages": {
          "type": "array",
          "description": "definitions.FreelookInputDetail.properties.alteredCoverages.description",
          "items": {
            "$ref": "#/definitions/CommonAlterationCoverageInput"
          }
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.FreelookInputDetail.properties.extendedProps.description",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Person": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "certiBeginDate": {
          "type": "string",
          "format": "date-time"
        },
        "certiCode": {
          "type": "string"
        },
        "certiEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "certiType": {
          "type": "integer",
          "format": "int32"
        },
        "declaration": {
          "$ref": "#/definitions/CustomerDeclarationInput"
        },
        "email": {
          "type": "string"
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "firstName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string"
        },
        "income": {
          "type": "integer",
          "format": "int64"
        },
        "jobCateCode": {
          "type": "string"
        },
        "jobCateId": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string"
        },
        "marriageStatus": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "smoking": {
          "type": "string"
        },
        "socialInsuranceIndi": {
          "type": "string"
        },
        "weight": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "SalesPackageBasicInfo": {
      "type": "object",
      "properties": {
        "collected": {
          "type": "boolean",
          "example": false,
          "description": "definitions.SalesPackageBasicInfo.properties.collected.description"
        },
        "coveragePeriods": {
          "type": "array",
          "description": "definitions.SalesPackageBasicInfo.properties.coveragePeriods.description",
          "items": {
            "$ref": "#/definitions/CoveragePeriod"
          }
        },
        "examplePrem": {
          "type": "number",
          "format": "double",
          "description": "definitions.SalesPackageBasicInfo.properties.examplePrem.description"
        },
        "examplePremNote": {
          "type": "string",
          "description": "definitions.SalesPackageBasicInfo.properties.examplePremNote.description"
        },
        "insurer": {
          "description": "definitions.SalesPackageBasicInfo.properties.insurer.description",
          "$ref": "#/definitions/Insurer"
        },
        "isNew": {
          "type": "boolean",
          "example": false,
          "description": "definitions.SalesPackageBasicInfo.properties.isNew.description"
        },
        "labels": {
          "type": "array",
          "description": "definitions.SalesPackageBasicInfo.properties.labels.description",
          "items": {
            "$ref": "#/definitions/SalesLabel"
          }
        },
        "maxAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.SalesPackageBasicInfo.properties.maxAge.description"
        },
        "maxAgeUnit": {
          "type": "string",
          "description": "definitions.SalesPackageBasicInfo.properties.maxAgeUnit.description"
        },
        "minAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.SalesPackageBasicInfo.properties.minAge.description"
        },
        "minAgeUnit": {
          "type": "string",
          "description": "definitions.SalesPackageBasicInfo.properties.minAgeUnit.description"
        },
        "moneyId": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.SalesPackageBasicInfo.properties.moneyId.description"
        },
        "packageCode": {
          "type": "string",
          "description": "definitions.SalesPackageBasicInfo.properties.packageCode.description"
        },
        "packageId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.SalesPackageBasicInfo.properties.packageId.description"
        },
        "packageName": {
          "type": "string",
          "description": "definitions.SalesPackageBasicInfo.properties.packageName.description"
        },
        "proposalIndi": {
          "type": "string",
          "description": "definitions.SalesPackageBasicInfo.properties.proposalIndi.description"
        },
        "quotationIndi": {
          "type": "string",
          "description": "definitions.SalesPackageBasicInfo.properties.quotationIndi.description"
        },
        "rights": {
          "type": "array",
          "description": "definitions.SalesPackageBasicInfo.properties.rights.description",
          "items": {
            "$ref": "#/definitions/SalesRights"
          }
        },
        "saPremInfo": {
          "type": "string",
          "description": "definitions.SalesPackageBasicInfo.properties.saPremInfo.description"
        },
        "visitNum": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.SalesPackageBasicInfo.properties.visitNum.description"
        }
      }
    },
    "Insurer": {
      "type": "object",
      "properties": {
        "abbrCode": {
          "type": "string"
        },
        "abbrName": {
          "type": "string"
        },
        "entityIdName": {
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Serializable"
        },
        "ifFilter": {
          "type": "string"
        },
        "insurerCode": {
          "type": "string"
        },
        "insurerDesc": {
          "type": "string"
        },
        "insurerId": {
          "type": "integer",
          "format": "int64"
        },
        "insurerLogo": {
          "type": "string"
        },
        "insurerName": {
          "type": "string"
        },
        "telephone": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ChangingContactInfoResponse": {
      "type": "object",
      "properties": {
        "clientRequestId": {
          "type": "string",
          "description": "definitions.ChangingContactInfoResponse.properties.clientRequestId.description"
        },
        "clientRequestTime": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.ChangingContactInfoResponse.properties.clientRequestTime.description"
        },
        "result": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ChangingContactInfoResponse.properties.result.description"
        },
        "messages": {
          "type": "array",
          "description": "definitions.ChangingContactInfoResponse.properties.messages.description",
          "items": {
            "$ref": "#/definitions/GenericValidationResult"
          }
        },
        "exceptions": {
          "type": "array",
          "description": "definitions.ChangingContactInfoResponse.properties.exceptions.description",
          "items": {
            "type": "string"
          }
        },
        "changeNo": {
          "type": "string",
          "description": "definitions.ChangingContactInfoResponse.properties.changeNo.description"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.ChangingContactInfoResponse.properties.finishTime.description"
        },
        "itemResults": {
          "type": "array",
          "description": "definitions.ChangingContactInfoResponse.properties.itemResults.description",
          "items": {
            "$ref": "#/definitions/ChangingContactInfoItemResultInfo"
          }
        }
      }
    },
    "SalesLabel": {
      "type": "object",
      "properties": {
        "entityIdName": {
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Serializable"
        },
        "ifFilter": {
          "type": "string"
        },
        "labelName": {
          "type": "string"
        },
        "labelPic": {
          "type": "string"
        },
        "listId": {
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MainInformation": {
      "type": "object",
      "properties": {
        "ally": {
          "type": "string",
          "description": "definitions.MainInformation.properties.ally.description"
        },
        "currency": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.MainInformation.properties.currency.description"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.MainInformation.properties.endDate.description"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.MainInformation.properties.extendedProps.description"
        },
        "familyType": {
          "type": "string",
          "description": "definitions.MainInformation.properties.familyType.description"
        },
        "indexIndi": {
          "type": "string",
          "description": "definitions.MainInformation.properties.indexIndi.description"
        },
        "mainPlan": {
          "type": "string",
          "description": "definitions.MainInformation.properties.mainPlan.description"
        },
        "orgId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.MainInformation.properties.orgId.description"
        },
        "payerWop": {
          "type": "string",
          "description": "definitions.MainInformation.properties.payerWop.description"
        },
        "productAbbreviation": {
          "type": "string",
          "description": "definitions.MainInformation.properties.productAbbreviation.description"
        },
        "productCode": {
          "type": "string",
          "description": "definitions.MainInformation.properties.productCode.description"
        },
        "productDescription": {
          "type": "string",
          "description": "definitions.MainInformation.properties.productDescription.description"
        },
        "productName": {
          "type": "string",
          "description": "definitions.MainInformation.properties.productName.description"
        },
        "salesCategory": {
          "description": "definitions.MainInformation.properties.salesCategory.description",
          "$ref": "#/definitions/SalesProductSalesCategory"
        },
        "spouseWaiver": {
          "type": "string",
          "description": "definitions.MainInformation.properties.spouseWaiver.description"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.MainInformation.properties.startDate.description"
        }
      }
    },
    "SalesCretiriaRequest": {
      "type": "object",
      "properties": {
        "keyWords": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "sign": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "SalesProduct": {
      "type": "object",
      "properties": {
        "attachCompulsory": {
          "type": "string",
          "description": "definitions.SalesProduct.properties.attachCompulsory.description"
        },
        "funds": {
          "type": "array",
          "description": "definitions.SalesProduct.properties.funds.description",
          "items": {
            "$ref": "#/definitions/Fund"
          }
        },
        "insType": {
          "type": "string",
          "description": "definitions.SalesProduct.properties.insType.description"
        },
        "insurer": {
          "description": "definitions.SalesProduct.properties.insurer.description",
          "$ref": "#/definitions/Insurer"
        },
        "masterId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.SalesProduct.properties.masterId.description"
        },
        "packageCode": {
          "type": "string",
          "description": "definitions.SalesProduct.properties.packageCode.description"
        },
        "productCode": {
          "type": "string",
          "description": "definitions.SalesProduct.properties.productCode.description"
        },
        "productDesc": {
          "type": "string",
          "description": "definitions.SalesProduct.properties.productDesc.description"
        },
        "productId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.SalesProduct.properties.productId.description"
        },
        "productName": {
          "type": "string",
          "description": "definitions.SalesProduct.properties.productName.description"
        },
        "salesProductLiabilities": {
          "type": "array",
          "description": "definitions.SalesProduct.properties.salesProductLiabilities.description",
          "items": {
            "$ref": "#/definitions/SalesProductLiability"
          }
        }
      }
    },
    "SalesProductAdvancedFiltersResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hotKeywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesHotKeywords"
          }
        },
        "insurers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insurer"
          }
        },
        "salesCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesCategory"
          }
        },
        "salesRights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rights"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "ProductCoverMultiple": {
      "type": "object",
      "properties": {
        "coverMultipleItems": {
          "type": "array",
          "description": "definitions.ProductCoverMultiple.properties.coverMultipleItems.description",
          "items": {
            "$ref": "#/definitions/CoverMultipleItem"
          }
        }
      }
    },
    "FreelookResultDetail": {
      "type": "object",
      "properties": {
        "totalGrossPremium": {
          "type": "number",
          "format": "double",
          "description": "definitions.FreelookResultDetail.properties.totalGrossPremium.description"
        },
        "totalExtraPremium": {
          "type": "number",
          "format": "double",
          "description": "definitions.FreelookResultDetail.properties.totalExtraPremium.description"
        },
        "suspense": {
          "type": "number",
          "format": "double",
          "description": "definitions.FreelookResultDetail.properties.suspense.description"
        },
        "advancePremium": {
          "type": "number",
          "format": "double",
          "description": "definitions.FreelookResultDetail.properties.advancePremium.description"
        },
        "medicalFee": {
          "type": "number",
          "format": "double",
          "description": "definitions.FreelookResultDetail.properties.medicalFee.description"
        },
        "totalRefundAmount": {
          "type": "number",
          "format": "double",
          "description": "definitions.FreelookResultDetail.properties.totalRefundAmount.description"
        },
        "adminFee": {
          "type": "number",
          "format": "double"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.FreelookResultDetail.properties.extendedProps.description",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ProductFund": {
      "type": "object",
      "properties": {
        "extendedProps": {
          "type": "object"
        },
        "fundCode": {
          "type": "string",
          "description": "definitions.ProductFund.properties.fundCode.description"
        },
        "productId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.ProductFund.properties.productId.description"
        },
        "minPartialWithdralval": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.ProductFund.properties.minPartialWithdralval.description"
        },
        "minPartialWithdralRemainingVal": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.ProductFund.properties.minPartialWithdralRemainingVal.description"
        },
        "minSwitOutVal": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.ProductFund.properties.minSwitOutVal.description"
        },
        "minSwitRemainVal": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.ProductFund.properties.minSwitRemainVal.description"
        },
        "switchPeriodUnit": {
          "type": "string",
          "description": "definitions.ProductFund.properties.switchPeriodUnit.description"
        },
        "maxSwitInTimes": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductFund.properties.maxSwitInTimes.description"
        },
        "maxSwitOutTimes": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductFund.properties.maxSwitOutTimes.description"
        },
        "maxPartialWithdralVal": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.ProductFund.properties.maxPartialWithdralVal.description"
        },
        "settleRatePeriodUnit": {
          "type": "string",
          "description": "definitions.ProductFund.properties.settleRatePeriodUnit.description"
        },
        "settleYearType": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductFund.properties.settleYearType.description"
        },
        "settleFreq": {
          "type": "string",
          "description": "definitions.ProductFund.properties.settleFreq.description"
        },
        "settleMonth": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductFund.properties.settleMonth.description"
        },
        "settleDay": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductFund.properties.settleDay.description"
        },
        "settleMethod": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductFund.properties.settleMethod.description"
        },
        "guaranteedRateOption": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductFund.properties.guaranteedRateOption.description"
        },
        "settleSimpleCompound": {
          "type": "string",
          "description": "definitions.ProductFund.properties.settleSimpleCompound.description"
        },
        "bonusSettleType": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductFund.properties.bonusSettleType.description"
        }
      }
    },
    "PremLimit": {
      "type": "object",
      "properties": {
        "chargePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.PremLimit.properties.chargePeriod.description"
        },
        "chargeType": {
          "type": "string",
          "description": "definitions.PremLimit.properties.chargeType.description"
        },
        "chargeYear": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.PremLimit.properties.chargeYear.description"
        },
        "maxAdTopupPrem": {
          "type": "integer",
          "format": "int64"
        },
        "maxAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.PremLimit.properties.maxAge.description"
        },
        "maxInitialPrem": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.PremLimit.properties.maxInitialPrem.description"
        },
        "maxReguTopupPrem": {
          "type": "integer",
          "format": "int64"
        },
        "minAdTopupPrem": {
          "type": "integer",
          "format": "int64"
        },
        "minAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.PremLimit.properties.minAge.description"
        },
        "minIncremntPrem": {
          "type": "integer",
          "format": "int64"
        },
        "minInitialPrem": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.PremLimit.properties.minInitialPrem.description"
        },
        "minReguTopupDecr": {
          "type": "integer",
          "format": "int64"
        },
        "minReguTopupIncr": {
          "type": "integer",
          "format": "int64"
        },
        "minReguTopupPrem": {
          "type": "integer",
          "format": "int64"
        },
        "moneyId": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.PremLimit.properties.moneyId.description"
        }
      }
    },
    "ChangingContactInfoInputDetail": {
      "type": "object",
      "properties": {
        "partyId": {
          "type": "string",
          "description": "definitions.ChangingContactInfoInputDetail.properties.partyId.description"
        },
        "partyContact": {
          "description": "definitions.ChangingContactInfoInputDetail.properties.partyContact.description",
          "$ref": "#/definitions/PartyContact"
        },
        "address": {
          "description": "definitions.ChangingContactInfoInputDetail.properties.address.description",
          "$ref": "#/definitions/AddressInput"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.ChangingContactInfoInputDetail.properties.extendedProps.description",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ShortUrlResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shortUrl": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "ProductRelationVO": {
      "type": "object",
      "properties": {
        "listId": {
          "type": "integer",
          "format": "int32"
        },
        "productAId": {
          "type": "integer",
          "format": "int64"
        },
        "productBId": {
          "type": "integer",
          "format": "int64"
        },
        "relation": {
          "type": "string"
        }
      }
    },
    "LiabilityInformation": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.LiabilityInformation.properties.categoryId.description"
        },
        "categoryName": {
          "type": "string",
          "description": "definitions.LiabilityInformation.properties.categoryName.description"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.LiabilityInformation.properties.extendedProps.description"
        },
        "liabilityId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.LiabilityInformation.properties.liabilityId.description"
        },
        "liabilityName": {
          "type": "string",
          "description": "definitions.LiabilityInformation.properties.liabilityName.description"
        }
      }
    },
    "ProductLiability": {
      "type": "object",
      "properties": {
        "annuity": {
          "type": "boolean",
          "example": false,
          "description": "definitions.ProductLiability.properties.annuity.description"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.ProductLiability.properties.extendedProps.description"
        },
        "liabilities": {
          "type": "array",
          "description": "definitions.ProductLiability.properties.liabilities.description",
          "items": {
            "$ref": "#/definitions/LiabilityInformation"
          }
        },
        "survivalBenefitOptions": {
          "type": "array",
          "description": "definitions.ProductLiability.properties.survivalBenefitOptions.description",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ChangingContactInfoResultDetail": {
      "type": "object",
      "properties": {
        "extendedProps": {
          "type": "object",
          "description": "definitions.ChangingContactInfoResultDetail.properties.extendedProps.description",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "IllusItem": {
      "type": "object",
      "properties": {
        "displayOrder": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CustomerDeclarationDetailInput": {
      "type": "object",
      "properties": {
        "declId": {
          "type": "integer",
          "format": "int64"
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fill1": {
          "type": "string"
        },
        "fill10": {
          "type": "string"
        },
        "fill2": {
          "type": "string"
        },
        "fill3": {
          "type": "string"
        },
        "fill4": {
          "type": "string"
        },
        "fill5": {
          "type": "string"
        },
        "fill6": {
          "type": "string"
        },
        "fill7": {
          "type": "string"
        },
        "fill8": {
          "type": "string"
        },
        "fill9": {
          "type": "string"
        }
      }
    },
    "GenericValidationResult": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "ruleType": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CustomerDeclarationInput": {
      "type": "object",
      "properties": {
        "declarationDate": {
          "type": "string",
          "format": "date-time"
        },
        "declarationDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerDeclarationDetailInput"
          }
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "partyId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "FreelookItemResultInfo": {
      "type": "object",
      "required": [
        "effectiveDate",
        "orderId",
        "policyNumber",
        "serviceId"
      ],
      "properties": {
        "itemResult": {
          "$ref": "#/definitions/FreelookResultDetail"
        },
        "policyNumber": {
          "type": "string",
          "example": "0000017623",
          "description": "definitions.FreelookItemResultInfo.properties.policyNumber.description"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32",
          "example": 201,
          "description": "definitions.FreelookItemResultInfo.properties.serviceId.description",
          "enum": [
            201,
            104
          ]
        },
        "submissionDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookItemResultInfo.properties.submissionDate.description"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookItemResultInfo.properties.effectiveDate.description"
        },
        "orderId": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.FreelookItemResultInfo.properties.orderId.description"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.FreelookItemResultInfo.properties.extendedProps.description",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "IllustrationCalc": {
      "type": "object",
      "properties": {
        "illusMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Map«string,List«IllusItem»»"
          }
        },
        "illusRate": {
          "type": "object"
        },
        "isULProduct": {
          "type": "string"
        },
        "mainAssuredAge": {
          "type": "integer",
          "format": "int32"
        },
        "quotationCode": {
          "type": "string"
        },
        "quotationId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AgeRangeVO": {
      "type": "object",
      "properties": {
        "maxAge": {
          "type": "integer",
          "format": "int32"
        },
        "maxUnit": {
          "type": "string"
        },
        "minAge": {
          "type": "integer",
          "format": "int32"
        },
        "minUnit": {
          "type": "string"
        }
      }
    },
    "SalesProductBasicResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "funds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fund"
          }
        },
        "liabilitiesMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "salesProductBasicList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesProductBasic"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "ProductInfo": {
      "type": "object",
      "properties": {
        "attachedRiders": {
          "type": "array",
          "description": "definitions.ProductInfo.properties.attachedRiders.description",
          "items": {
            "$ref": "#/definitions/ProductRelationship"
          }
        },
        "benefitType": {
          "type": "string",
          "description": "definitions.ProductInfo.properties.benefitType.description"
        },
        "bonus": {
          "description": "definitions.ProductInfo.properties.bonus.description",
          "$ref": "#/definitions/Bonus"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.ProductInfo.properties.extendedProps.description"
        },
        "liability": {
          "description": "definitions.ProductInfo.properties.liability.description",
          "$ref": "#/definitions/ProductLiability"
        },
        "listProductFund": {
          "type": "array",
          "description": "definitions.ProductInfo.properties.listProductFund.description",
          "items": {
            "$ref": "#/definitions/ProductFund"
          }
        },
        "maininfo": {
          "description": "definitions.ProductInfo.properties.maininfo.description",
          "$ref": "#/definitions/MainInformation"
        },
        "premSaCalc": {
          "description": "definitions.ProductInfo.properties.premSaCalc.description",
          "$ref": "#/definitions/PremiumSaCalculation"
        },
        "productCoverMultiple": {
          "description": "definitions.ProductInfo.properties.productCoverMultiple.description",
          "$ref": "#/definitions/ProductCoverMultiple"
        },
        "productId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.ProductInfo.properties.productId.description"
        }
      }
    },
    "SalesProductBasic": {
      "type": "object",
      "properties": {
        "funds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fund"
          }
        },
        "insType": {
          "type": "string"
        },
        "insurer": {
          "$ref": "#/definitions/SalesInsurer"
        },
        "packageCode": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "salesProductLiabilitiesList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesProductLiabilityBasic"
          }
        }
      }
    },
    "ProductTermVO": {
      "type": "object",
      "properties": {
        "periodType": {
          "type": "string",
          "description": "definitions.ProductTermVO.properties.periodType.description"
        },
        "periodValue": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductTermVO.properties.periodValue.description"
        }
      }
    },
    "FreelookResponse": {
      "type": "object",
      "properties": {
        "clientRequestId": {
          "type": "string",
          "description": "definitions.FreelookResponse.properties.clientRequestId.description"
        },
        "clientRequestTime": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookResponse.properties.clientRequestTime.description"
        },
        "result": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.FreelookResponse.properties.result.description"
        },
        "messages": {
          "type": "array",
          "description": "definitions.FreelookResponse.properties.messages.description",
          "items": {
            "$ref": "#/definitions/GenericValidationResult"
          }
        },
        "exceptions": {
          "type": "array",
          "description": "definitions.FreelookResponse.properties.exceptions.description",
          "items": {
            "type": "string"
          }
        },
        "changeNo": {
          "type": "string",
          "description": "definitions.FreelookResponse.properties.changeNo.description"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookResponse.properties.finishTime.description"
        },
        "itemResults": {
          "type": "array",
          "description": "definitions.FreelookResponse.properties.itemResults.description",
          "items": {
            "$ref": "#/definitions/FreelookItemResultInfo"
          }
        }
      }
    },
    "ChangingContactInfoItemResultInfo": {
      "type": "object",
      "required": [
        "effectiveDate",
        "orderId",
        "policyNumber",
        "serviceId"
      ],
      "properties": {
        "itemResult": {
          "$ref": "#/definitions/ChangingContactInfoResultDetail"
        },
        "policyNumber": {
          "type": "string",
          "example": "0000017623",
          "description": "definitions.ChangingContactInfoItemResultInfo.properties.policyNumber.description"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32",
          "example": 201,
          "description": "definitions.ChangingContactInfoItemResultInfo.properties.serviceId.description",
          "enum": [
            201,
            104
          ]
        },
        "submissionDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.ChangingContactInfoItemResultInfo.properties.submissionDate.description"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.ChangingContactInfoItemResultInfo.properties.effectiveDate.description"
        },
        "orderId": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ChangingContactInfoItemResultInfo.properties.orderId.description"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.ChangingContactInfoItemResultInfo.properties.extendedProps.description",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PolicyInfoResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policy": {
          "$ref": "#/definitions/ProposalInfo"
        },
        "policyCode": {
          "type": "string"
        },
        "proposalCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "ChangingContactInfoRequest": {
      "type": "object",
      "properties": {
        "clientRequestId": {
          "type": "string",
          "description": "definitions.ChangingContactInfoRequest.properties.clientRequestId.description"
        },
        "clientRequestTime": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.ChangingContactInfoRequest.properties.clientRequestTime.description"
        },
        "items": {
          "type": "array",
          "description": "definitions.ChangingContactInfoRequest.properties.items.description",
          "items": {
            "$ref": "#/definitions/ChangingContactInfoItemInput"
          }
        }
      }
    },
    "SalesPackageResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "salesPackageInfo": {
          "$ref": "#/definitions/SalesPackageInfo"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "SalesAvailableRidersRequest": {
      "type": "object",
      "properties": {
        "attachedPrdtLimitCondition": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachedProductLimit"
          }
        },
        "insureds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insured"
          }
        },
        "mainCoverages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coverage"
          }
        },
        "msg": {
          "type": "string"
        },
        "packageCode": {
          "type": "string"
        },
        "proposer": {
          "$ref": "#/definitions/Proposer"
        },
        "riderCoverages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coverage"
          }
        },
        "sign": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "CoveragePremium": {
      "type": "object",
      "properties": {
        "benefitlevel": {
          "type": "string"
        },
        "chargePeriod": {
          "$ref": "#/definitions/ChargePeriod"
        },
        "coveragePeriod": {
          "$ref": "#/definitions/CoveragePeriod"
        },
        "displayPremIndi": {
          "type": "string"
        },
        "firstYearPrem": {
          "type": "number",
          "format": "double"
        },
        "itemId": {
          "type": "integer",
          "format": "int64"
        },
        "premAn": {
          "type": "number",
          "format": "double"
        },
        "premium": {
          "type": "number",
          "format": "double"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "sa": {
          "type": "number",
          "format": "double"
        },
        "unit": {
          "type": "integer",
          "format": "int32"
        },
        "unitFlag": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BankAccountInput": {
      "type": "object",
      "properties": {
        "accoCertiCode": {
          "type": "string"
        },
        "accoName": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "bankAccount": {
          "type": "string"
        },
        "bankAccountCity": {
          "type": "string"
        },
        "bankAccountProvince": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "creditCardType": {
          "type": "string"
        },
        "debitCreditType": {
          "type": "string"
        },
        "expireDate": {
          "type": "string",
          "format": "date-time"
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "issueBankName": {
          "type": "string"
        },
        "partyId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SalesPlanGetResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plan": {
          "$ref": "#/definitions/ProposalInfo"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "SalesPackageCretiriaRequest": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        },
        "salesPackageCode": {
          "type": "string"
        },
        "sign": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "Beneficiary": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "beneType": {
          "type": "string"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "certiBeginDate": {
          "type": "string",
          "format": "date-time"
        },
        "certiCode": {
          "type": "string"
        },
        "certiEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "certiType": {
          "type": "integer",
          "format": "int32"
        },
        "declaration": {
          "$ref": "#/definitions/CustomerDeclarationInput"
        },
        "email": {
          "type": "string"
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "firstName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string"
        },
        "income": {
          "type": "integer",
          "format": "int64"
        },
        "insuredId": {
          "type": "integer",
          "format": "int64"
        },
        "jobCateCode": {
          "type": "string"
        },
        "jobCateId": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string"
        },
        "marriageStatus": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "relToInsured": {
          "type": "integer",
          "format": "int32"
        },
        "shareOrder": {
          "type": "integer",
          "format": "int32"
        },
        "shareRate": {
          "type": "number",
          "format": "double"
        },
        "smoking": {
          "type": "string"
        },
        "socialInsuranceIndi": {
          "type": "string"
        },
        "weight": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "SalesUserRequest": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        },
        "sign": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "AgeLimit": {
      "type": "object",
      "properties": {
        "benefitLevel": {
          "type": "string",
          "description": "definitions.AgeLimit.properties.benefitLevel.description"
        },
        "chargePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.chargePeriod.description"
        },
        "chargeYear": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.chargeYear.description"
        },
        "coveragePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.coveragePeriod.description"
        },
        "coverageYear": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.coverageYear.description"
        },
        "endPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.endPeriod.description"
        },
        "endYear": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.endYear.description"
        },
        "gender": {
          "type": "string",
          "description": "definitions.AgeLimit.properties.gender.description"
        },
        "maxInsdAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.maxInsdAge.description"
        },
        "maxPhAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.maxPhAge.description"
        },
        "minInsdAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.minInsdAge.description"
        },
        "minPhAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.minPhAge.description"
        },
        "payPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.payPeriod.description"
        },
        "payYear": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.AgeLimit.properties.payYear.description"
        }
      }
    },
    "SalesPlanListResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "planList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProposalInfo"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "FreelookQuotationResponse": {
      "type": "object",
      "properties": {
        "clientRequestId": {
          "type": "string",
          "description": "definitions.FreelookQuotationResponse.properties.clientRequestId.description"
        },
        "clientRequestTime": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookQuotationResponse.properties.clientRequestTime.description"
        },
        "result": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.FreelookQuotationResponse.properties.result.description"
        },
        "messages": {
          "type": "array",
          "description": "definitions.FreelookQuotationResponse.properties.messages.description",
          "items": {
            "$ref": "#/definitions/GenericValidationResult"
          }
        },
        "exceptions": {
          "type": "array",
          "description": "definitions.FreelookQuotationResponse.properties.exceptions.description",
          "items": {
            "type": "string"
          }
        },
        "policyNumber": {
          "type": "string",
          "description": "definitions.FreelookQuotationResponse.properties.policyNumber.description"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32",
          "example": 201,
          "description": "definitions.FreelookQuotationResponse.properties.serviceId.description",
          "enum": [
            201
          ]
        },
        "submissionDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookQuotationResponse.properties.submissionDate.description"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookQuotationResponse.properties.effectiveDate.description"
        },
        "quotationResult": {
          "description": "definitions.FreelookQuotationResponse.properties.quotationResult.description",
          "$ref": "#/definitions/FreelookResultDetail"
        }
      }
    },
    "SalesPackageInfo": {
      "type": "object",
      "properties": {
        "ageRange": {
          "description": "definitions.SalesPackageInfo.properties.ageRange.description",
          "$ref": "#/definitions/AgeRangeVO"
        },
        "attachProductList": {
          "type": "array",
          "description": "definitions.SalesPackageInfo.properties.attachProductList.description",
          "items": {
            "$ref": "#/definitions/SalesProduct"
          }
        },
        "chargeList": {
          "type": "array",
          "description": "definitions.SalesPackageInfo.properties.chargeList.description",
          "items": {
            "$ref": "#/definitions/ProductTermVO"
          }
        },
        "coverageList": {
          "type": "array",
          "description": "definitions.SalesPackageInfo.properties.coverageList.description",
          "items": {
            "$ref": "#/definitions/ProductTermVO"
          }
        },
        "ilpProductIndi": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.ilpProductIndi.description"
        },
        "insurer": {
          "description": "definitions.SalesPackageInfo.properties.insurer.description",
          "$ref": "#/definitions/Insurer"
        },
        "isCollected": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.isCollected.description"
        },
        "isNew": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.isNew.description"
        },
        "mainProductCode": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.mainProductCode.description"
        },
        "mainProductId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.SalesPackageInfo.properties.mainProductId.description"
        },
        "moneyId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.SalesPackageInfo.properties.moneyId.description"
        },
        "packageCode": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.packageCode.description"
        },
        "packageFeatureList": {
          "type": "array",
          "description": "definitions.SalesPackageInfo.properties.packageFeatureList.description",
          "items": {
            "$ref": "#/definitions/PackageFeature"
          }
        },
        "packageId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.SalesPackageInfo.properties.packageId.description"
        },
        "packageName": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.packageName.description"
        },
        "proposalIndi": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.proposalIndi.description"
        },
        "proposalPdfIndi": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.proposalPdfIndi.description"
        },
        "quotationIndi": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.quotationIndi.description"
        },
        "quotePdfIndi": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.quotePdfIndi.description"
        },
        "saPremInfo": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.saPremInfo.description"
        },
        "salesLiabilityList": {
          "type": "array",
          "description": "definitions.SalesPackageInfo.properties.salesLiabilityList.description",
          "items": {
            "$ref": "#/definitions/SalesProductLiability"
          }
        },
        "salesRightsList": {
          "type": "array",
          "description": "definitions.SalesPackageInfo.properties.salesRightsList.description",
          "items": {
            "$ref": "#/definitions/PackageRights"
          }
        },
        "suggestReason": {
          "type": "string",
          "description": "definitions.SalesPackageInfo.properties.suggestReason.description"
        },
        "totalVisitCount": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.SalesPackageInfo.properties.totalVisitCount.description"
        }
      }
    },
    "SalesProductCalcRequest": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        },
        "performanceLevel": {
          "type": "integer",
          "format": "int32"
        },
        "plan": {
          "$ref": "#/definitions/ProposalInfo"
        },
        "sign": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "SalesProductDetailDataResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "packageCode": {
          "type": "string"
        },
        "packageName": {
          "type": "string"
        },
        "proposalPdfIndi": {
          "type": "string"
        },
        "quotePdfIndi": {
          "type": "string"
        },
        "salesInsurer": {
          "$ref": "#/definitions/SalesInsurer"
        },
        "salesProductConfigInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesProductDetailInfo"
          }
        },
        "status": {
          "type": "string"
        },
        "suggestReason": {
          "type": "string"
        }
      }
    },
    "SalesProductBasicRequest": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        },
        "productCodes": {
          "type": "string"
        },
        "salesPackageCode": {
          "type": "string"
        },
        "sign": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "PayPeriod": {
      "type": "object",
      "properties": {
        "periodType": {
          "type": "integer",
          "format": "int32"
        },
        "periodValue": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FreelookQuotationRequest": {
      "type": "object",
      "required": [
        "effectiveDate",
        "item",
        "policyNumber",
        "serviceId"
      ],
      "properties": {
        "clientRequestId": {
          "type": "string",
          "description": "definitions.FreelookQuotationRequest.properties.clientRequestId.description"
        },
        "clientRequestTime": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookQuotationRequest.properties.clientRequestTime.description"
        },
        "policyNumber": {
          "type": "string",
          "example": "0000017623",
          "description": "definitions.FreelookQuotationRequest.properties.policyNumber.description"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32",
          "example": 201,
          "description": "definitions.FreelookQuotationRequest.properties.serviceId.description",
          "enum": [
            201
          ]
        },
        "submissionDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookQuotationRequest.properties.submissionDate.description"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookQuotationRequest.properties.effectiveDate.description"
        },
        "item": {
          "description": "definitions.FreelookQuotationRequest.properties.item.description",
          "$ref": "#/definitions/FreelookInputDetail"
        }
      }
    },
    "CommonAlterationCoverageInput": {
      "type": "object",
      "properties": {
        "coverageNo": {
          "type": "string",
          "example": "197531",
          "description": "definitions.CommonAlterationCoverageInput.properties.coverageNo.description"
        }
      }
    },
    "FreelookItemInput": {
      "type": "object",
      "required": [
        "effectiveDate",
        "itemDetail",
        "orderId",
        "policyNumber",
        "serviceId"
      ],
      "properties": {
        "policyNumber": {
          "type": "string",
          "example": "0000017623",
          "description": "definitions.FreelookItemInput.properties.policyNumber.description"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32",
          "example": 201,
          "description": "definitions.FreelookItemInput.properties.serviceId.description",
          "enum": [
            201,
            104
          ]
        },
        "submissionDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookItemInput.properties.submissionDate.description"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookItemInput.properties.effectiveDate.description"
        },
        "orderId": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.FreelookItemInput.properties.orderId.description"
        },
        "itemDetail": {
          "description": "definitions.FreelookItemInput.properties.itemDetail.description",
          "$ref": "#/definitions/FreelookInputDetail"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.FreelookItemInput.properties.extendedProps.description",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ShortUrlRequest": {
      "type": "object",
      "properties": {
        "shareUrl": {
          "type": "string"
        }
      }
    },
    "SalesPlanRequest": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        },
        "plan": {
          "$ref": "#/definitions/ProposalInfo"
        },
        "sign": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "Producer": {
      "type": "object",
      "properties": {
        "agentInfoMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "producerCode": {
          "type": "string"
        },
        "producerEmail": {
          "type": "string"
        },
        "producerName": {
          "type": "string"
        },
        "producerPhone": {
          "type": "string"
        },
        "producerType": {
          "type": "string"
        },
        "returnUrl": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "CoveragePeriod": {
      "type": "object",
      "properties": {
        "periodType": {
          "type": "integer",
          "format": "int32"
        },
        "periodValue": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SalesProductLiability": {
      "type": "object",
      "properties": {
        "categoryName": {
          "type": "string",
          "description": "definitions.SalesProductLiability.properties.categoryName.description"
        },
        "liabCategory": {
          "type": "string",
          "description": "definitions.SalesProductLiability.properties.liabCategory.description"
        },
        "liabDesc": {
          "type": "string",
          "description": "definitions.SalesProductLiability.properties.liabDesc.description"
        },
        "liabId": {
          "type": "integer",
          "format": "int64"
        },
        "liabName": {
          "type": "string",
          "description": "definitions.SalesProductLiability.properties.liabName.description"
        },
        "needDiseaseIndi": {
          "type": "string",
          "description": "definitions.SalesProductLiability.properties.needDiseaseIndi.description"
        }
      }
    },
    "SalesPlanDeleteResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "ProposalResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proposal": {
          "$ref": "#/definitions/ProposalInfo"
        },
        "proposalCode": {
          "type": "string"
        },
        "quotationCode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "PackageFeature": {
      "type": "object",
      "properties": {
        "featureDesc": {
          "type": "string",
          "description": "definitions.PackageFeature.properties.featureDesc.description"
        },
        "featurePic": {
          "type": "string",
          "description": "definitions.PackageFeature.properties.featurePic.description"
        },
        "packageCode": {
          "type": "string",
          "description": "definitions.PackageFeature.properties.packageCode.description"
        }
      }
    },
    "InvestFund": {
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "fundCode": {
          "type": "string"
        },
        "fundCurrency": {
          "type": "integer",
          "format": "int64"
        },
        "fundName": {
          "type": "string"
        },
        "fundType": {
          "type": "string"
        },
        "highRate": {
          "type": "number",
          "format": "double"
        },
        "lowRate": {
          "type": "number",
          "format": "double"
        },
        "midRate": {
          "type": "number",
          "format": "double"
        },
        "rateDesc": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ValueAdded": {
      "type": "object",
      "properties": {
        "displayOrder": {
          "type": "integer",
          "format": "int64"
        },
        "valueAddedDescPic": {
          "type": "string"
        },
        "valueAddedId": {
          "type": "integer",
          "format": "int64"
        },
        "valueAddedName": {
          "type": "string"
        }
      }
    },
    "AttachedProductLimit": {
      "type": "object",
      "properties": {
        "ageRange": {
          "$ref": "#/definitions/AgeRangeVO"
        },
        "amountLimitList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountLimit"
          }
        },
        "attachedProductId": {
          "type": "integer",
          "format": "int64"
        },
        "premLimitList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremLimit"
          }
        }
      }
    },
    "Fund": {
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.Fund.properties.endDate.description"
        },
        "fundCode": {
          "type": "string",
          "description": "definitions.Fund.properties.fundCode.description"
        },
        "fundCurrency": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.Fund.properties.fundCurrency.description"
        },
        "fundName": {
          "type": "string",
          "description": "definitions.Fund.properties.fundName.description"
        },
        "fundType": {
          "type": "string",
          "description": "definitions.Fund.properties.fundType.description"
        },
        "highRate": {
          "type": "number",
          "format": "double",
          "description": "definitions.Fund.properties.highRate.description"
        },
        "lowRate": {
          "type": "number",
          "format": "double",
          "description": "definitions.Fund.properties.lowRate.description"
        },
        "midRate": {
          "type": "number",
          "format": "double",
          "description": "definitions.Fund.properties.midRate.description"
        },
        "rateDesc": {
          "type": "string",
          "description": "definitions.Fund.properties.rateDesc.description"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.Fund.properties.startDate.description"
        }
      }
    },
    "SalesPackageListResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "salesPackageBasicInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesPackageBasicInfo"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "SalesDeleteRequest": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        },
        "quotationCode": {
          "type": "string"
        },
        "sign": {
          "type": "string"
        },
        "tenantCode": {
          "type": "string"
        }
      }
    },
    "FreelookRequest": {
      "type": "object",
      "properties": {
        "clientRequestId": {
          "type": "string",
          "description": "definitions.FreelookRequest.properties.clientRequestId.description"
        },
        "clientRequestTime": {
          "type": "string",
          "format": "date-time",
          "description": "definitions.FreelookRequest.properties.clientRequestTime.description"
        },
        "items": {
          "type": "array",
          "description": "definitions.FreelookRequest.properties.items.description",
          "items": {
            "$ref": "#/definitions/FreelookItemInput"
          }
        }
      }
    },
    "CoverMultipleItem": {
      "type": "object",
      "properties": {
        "productCode": {
          "type": "string",
          "description": "definitions.CoverMultipleItem.properties.productCode.description"
        },
        "ageRange": {
          "type": "string",
          "description": "definitions.CoverMultipleItem.properties.ageRange.description"
        },
        "termRange": {
          "type": "string",
          "description": "definitions.CoverMultipleItem.properties.termRange.description"
        },
        "minValue": {
          "type": "number",
          "format": "double",
          "description": "definitions.CoverMultipleItem.properties.minValue.description"
        },
        "maxValue": {
          "type": "number",
          "format": "double",
          "description": "definitions.CoverMultipleItem.properties.maxValue.description"
        }
      }
    },
    "SalesProductLiabilityBasic": {
      "type": "object",
      "properties": {
        "categoryName": {
          "type": "string"
        },
        "liabCategory": {
          "type": "string"
        },
        "liabDesc": {
          "type": "string"
        },
        "liabId": {
          "type": "integer",
          "format": "int64"
        },
        "liabName": {
          "type": "string"
        },
        "needDiseaseIndi": {
          "type": "string"
        }
      }
    },
    "PdfResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filePath": {
          "type": "string",
          "description": "definitions.PdfResponse.properties.filePath.description"
        },
        "pdfStatus": {
          "type": "string",
          "description": "definitions.PdfResponse.properties.pdfStatus.description"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "SalesCategory": {
      "type": "object",
      "properties": {
        "displayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "listId": {
          "type": "integer",
          "format": "int32"
        },
        "typeName": {
          "type": "string"
        }
      }
    },
    "TargetAttachRateVO": {
      "type": "object",
      "properties": {
        "amountEqual": {
          "type": "string"
        },
        "mastLimitUnit": {
          "type": "string"
        },
        "maxAthAge": {
          "type": "integer",
          "format": "int32"
        },
        "maxAthAmt": {
          "type": "number",
          "format": "double"
        },
        "maxAthRate": {
          "type": "number",
          "format": "double"
        },
        "maxMastAge": {
          "type": "integer",
          "format": "int32"
        },
        "maxMastAmt": {
          "type": "number",
          "format": "double"
        },
        "minAthAge": {
          "type": "integer",
          "format": "int32"
        },
        "minAthAmt": {
          "type": "number",
          "format": "double"
        },
        "minAthRate": {
          "type": "number",
          "format": "double"
        },
        "minMastAge": {
          "type": "integer",
          "format": "int32"
        },
        "minMastAmt": {
          "type": "number",
          "format": "double"
        },
        "targetAttachedId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ProductBenefitLevel": {
      "type": "object",
      "properties": {
        "benefitLevel": {
          "type": "string"
        },
        "levelDesc": {
          "type": "string"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ProductRelationship": {
      "type": "object",
      "properties": {
        "attachRelation": {
          "type": "string",
          "description": "definitions.ProductRelationship.properties.attachRelation.description"
        },
        "attachType": {
          "type": "string",
          "description": "definitions.ProductRelationship.properties.attachType.description"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.ProductRelationship.properties.extendedProps.description"
        },
        "masterProductCode": {
          "type": "string",
          "description": "definitions.ProductRelationship.properties.masterProductCode.description"
        },
        "masterProductId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.ProductRelationship.properties.masterProductId.description"
        },
        "maxAthAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductRelationship.properties.maxAthAge.description"
        },
        "maxAthMastAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductRelationship.properties.maxAthMastAge.description"
        },
        "maxAttachSa2MainSaRate": {
          "type": "number",
          "format": "double",
          "description": "definitions.ProductRelationship.properties.maxAttachSa2MainSaRate.description"
        },
        "maxAttachedSa": {
          "type": "number",
          "format": "double",
          "description": "definitions.ProductRelationship.properties.maxAttachedSa.description"
        },
        "maxTotalSa2MainSaRate": {
          "type": "number",
          "format": "double",
          "description": "definitions.ProductRelationship.properties.maxTotalSa2MainSaRate.description"
        },
        "minAthAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductRelationship.properties.minAthAge.description"
        },
        "minAthMastAge": {
          "type": "integer",
          "format": "int32",
          "description": "definitions.ProductRelationship.properties.minAthMastAge.description"
        },
        "minAttachSa2MainSaRate": {
          "type": "number",
          "format": "double",
          "description": "definitions.ProductRelationship.properties.minAttachSa2MainSaRate.description"
        },
        "minMastSaAmount": {
          "type": "number",
          "format": "double",
          "description": "definitions.ProductRelationship.properties.minMastSaAmount.description"
        },
        "riderProductCode": {
          "type": "string",
          "description": "definitions.ProductRelationship.properties.riderProductCode.description"
        },
        "riderProductId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.ProductRelationship.properties.riderProductId.description"
        },
        "riderSa2MainPremRate": {
          "type": "number",
          "format": "double",
          "description": "definitions.ProductRelationship.properties.riderSa2MainPremRate.description"
        },
        "saNoEqual": {
          "type": "string",
          "description": "definitions.ProductRelationship.properties.saNoEqual.description"
        },
        "totalOverRate": {
          "type": "number",
          "format": "double",
          "description": "definitions.ProductRelationship.properties.totalOverRate.description"
        }
      }
    },
    "ProposalPdfRequest": {
      "type": "object",
      "properties": {
        "investFunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvestFund"
          }
        },
        "proposalInfo": {
          "$ref": "#/definitions/ProposalInfo"
        }
      }
    },
    "TopupWithdraw": {
      "type": "object",
      "properties": {
        "addPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "addPremAn": {
          "type": "number",
          "format": "double"
        },
        "addPremType": {
          "type": "string"
        },
        "addStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "addYear": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "chargeMode": {
          "type": "string"
        },
        "endYear": {
          "type": "integer",
          "format": "int64"
        },
        "paidupDate": {
          "type": "string",
          "format": "date-time"
        },
        "payMode": {
          "type": "integer",
          "format": "int64"
        },
        "payToDate": {
          "type": "string",
          "format": "date-time"
        },
        "premType": {
          "type": "string"
        },
        "startYear": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ChargePeriod": {
      "type": "object",
      "properties": {
        "periodType": {
          "type": "integer",
          "format": "int32"
        },
        "periodValue": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SalesRights": {
      "type": "object",
      "properties": {
        "displayOrder": {
          "type": "integer",
          "format": "int64"
        },
        "entityIdName": {
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Serializable"
        },
        "ifFilter": {
          "type": "string"
        },
        "listId": {
          "type": "integer",
          "format": "int64"
        },
        "rightDesc": {
          "type": "string"
        },
        "rightName": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AbleRider": {
      "type": "object",
      "properties": {
        "productCode": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      }
    },
    "IllustrationCalcResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "illusMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Map«string,List«IllusItem»»"
          }
        },
        "illusRate": {
          "type": "object"
        },
        "isULProduct": {
          "type": "string"
        },
        "mainAssuredAge": {
          "type": "integer",
          "format": "int32"
        },
        "quotationCode": {
          "type": "string"
        },
        "quotationId": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Coverage": {
      "type": "object",
      "properties": {
        "benefitlevel": {
          "type": "string"
        },
        "chargePeriod": {
          "$ref": "#/definitions/ChargePeriod"
        },
        "coveragePeriod": {
          "$ref": "#/definitions/CoveragePeriod"
        },
        "displayPremIndi": {
          "type": "string"
        },
        "endPeriod": {
          "$ref": "#/definitions/PayPeriod"
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "firstYearPrem": {
          "type": "number",
          "format": "double"
        },
        "insuredCategory": {
          "type": "string"
        },
        "insuredIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "investRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvestRate"
          }
        },
        "itemId": {
          "type": "integer",
          "format": "int64"
        },
        "masterItemId": {
          "type": "integer",
          "format": "int64"
        },
        "masterProductId": {
          "type": "integer",
          "format": "int64"
        },
        "payPeriod": {
          "$ref": "#/definitions/PayPeriod"
        },
        "paymentFreq": {
          "type": "string"
        },
        "planLiabilityList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanLiabilityInput"
          }
        },
        "premAn": {
          "type": "number",
          "format": "double"
        },
        "premium": {
          "type": "number",
          "format": "double"
        },
        "productCode": {
          "type": "string"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "sa": {
          "type": "number",
          "format": "double"
        },
        "topupWithdraws": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopupWithdraw"
          }
        },
        "unit": {
          "type": "integer",
          "format": "int32"
        },
        "unitFlag": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OrganProposer": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "companyName": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "contactTel": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "homeTel": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "mobileTel": {
          "type": "string"
        },
        "officeTel": {
          "type": "string"
        },
        "officeTelExt": {
          "type": "string"
        },
        "registerCode": {
          "type": "string"
        },
        "registerType": {
          "type": "string"
        }
      }
    },
    "Liability": {
      "type": "object",
      "properties": {
        "benefitLevel": {
          "type": "string"
        },
        "countWay": {
          "type": "string",
          "description": "definitions.Liability.properties.countWay.description"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int64"
        },
        "isPricedOnLiab": {
          "type": "string"
        },
        "liabDesc": {
          "type": "string",
          "description": "definitions.Liability.properties.liabDesc.description"
        },
        "liabDescProd": {
          "type": "string"
        },
        "liabId": {
          "type": "integer",
          "format": "int64",
          "description": "definitions.Liability.properties.liabId.description"
        },
        "liabName": {
          "type": "string",
          "description": "definitions.Liability.properties.liabName.description"
        },
        "liabType": {
          "type": "string"
        },
        "optionalIndi": {
          "type": "string"
        },
        "premIndi": {
          "type": "string"
        },
        "renderBenefitLevel": {
          "type": "boolean"
        },
        "renderPrem": {
          "type": "boolean"
        },
        "renderSa": {
          "type": "boolean"
        },
        "renderUnit": {
          "type": "boolean"
        },
        "sa": {
          "type": "number",
          "format": "double"
        },
        "selected": {
          "type": "boolean"
        },
        "stdPremAf": {
          "type": "number",
          "format": "double"
        },
        "stdPremBf": {
          "type": "number",
          "format": "double"
        },
        "totalPremAf": {
          "type": "number",
          "format": "double"
        },
        "unit": {
          "type": "number",
          "format": "double"
        },
        "unitFlag": {
          "type": "string"
        }
      }
    },
    "PremiumSaCalculation": {
      "type": "object",
      "properties": {
        "ageBase": {
          "type": "string",
          "description": "definitions.PremiumSaCalculation.properties.ageBase.description"
        },
        "extendedProps": {
          "type": "object",
          "description": "definitions.PremiumSaCalculation.properties.extendedProps.description"
        },
        "premiumFrequency": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unitFlag": {
          "type": "string",
          "description": "definitions.PremiumSaCalculation.properties.unitFlag.description"
        },
        "waiver": {
          "type": "boolean",
          "example": false,
          "description": "definitions.PremiumSaCalculation.properties.waiver.description"
        }
      }
    },
    "Map«string,List«IllusItem»»": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/List"
      }
    },
    "PlanLiabilityInput": {
      "type": "object",
      "properties": {
        "liabId": {
          "type": "integer",
          "format": "int64"
        },
        "unitFlag": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PayerAccountInput": {
      "type": "object",
      "properties": {
        "bankAccount": {
          "$ref": "#/definitions/BankAccountInput"
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "nextBankAccount": {
          "$ref": "#/definitions/BankAccountInput"
        },
        "payerId": {
          "type": "integer",
          "format": "int64"
        },
        "paymentMethod": {
          "type": "integer",
          "format": "int32"
        },
        "paymentMethodNext": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SalesProposalListResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proposalList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProposalInfo"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "SalesProspectListResponse": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "prospectList": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "status": {
          "type": "string"
        }
      }
    }
  }
}